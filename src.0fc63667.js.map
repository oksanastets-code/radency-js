{"version":3,"sources":["js/refs.js","js/get-dates.js","js/get-current-date.js","data/notes.js","js/render-notes-table.js","js/open-form.js","js/close-form.js","js/get-btns.js","js/render-summary.js","js/delete-note.js","js/edit-note.js","js/unarchive-note.js","js/render-archive.js","js/archive-note.js","js/add-new-note.js","index.js"],"names":["tableEl","document","querySelector","lightbox","addNoteForm","openFormBtn","closeFormBtn","saveBtn","addBtn","summaryTableEl","archiveLink","archiveTableEl","getDates","str","regex","foundedDates","split","forEach","s","matches_array","match","push","join","getCurrentDate","newDate","Date","toLocaleDateString","year","month","day","id","name","created","category","content","dates","makeNotesTableRowMarkup","note","notesTableRowsMarkup","notesList","map","refs","insertAdjacentHTML","onOpenForm","classList","add","remove","style","display","addEventListener","onCloseForm","getBtns","querySelectorAll","tds","makeSummaryTableRowMarkup","data","option","active","archieved","optionsArray","getElementById","children","value","makeSummaryTableRowData","item","countNotesByCategoryAndStatus","callback","array","arrayByCategory","filter","td","textContent","activeArray","archivedArray","parentElement","hasAttribute","newSummaryRowData","summaryData","length","renderSummaryTable","summaryTableRowsMarkup","lastElementChild","deleteNote","btn","event","parentNode","editTarget","index","editNote","editNoteData","parent","tbodyEl","indexOf","className","input","unarchiveBtns","getUnarchiveBtns","identity","firstElementChild","splice","dataset","status","onaAchiveLinkClick","e","preventDefault","renderArchiveTable","makeArchiveTableRowMarkup","archiveData","archiveTableRowsMarkup","trs","arrayOfTrs","archivedList","getArchiveTableData","foo","elName","elCateg","elContent","newArchiveRow","archiveNote","onSubmit","formElements","currentTarget","elements","renderNewNote","categ","reset","newNote","newNoteRow"],"mappings":"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","file":"src.0fc63667.js","sourceRoot":"../src","sourcesContent":["export default {\n  tableEl: document.querySelector('.js-notes-table'),\n  lightbox: document.querySelector('.js-lightbox'),\n  addNoteForm: document.querySelector('.note-form'),\n  openFormBtn: document.querySelector('[data-action=\"open-form\"]'),\n  closeFormBtn: document.querySelector('[data-action=\"close-form\"]'),\n  saveBtn: document.querySelector('[data-action=\"edit-note\"]'),\n  addBtn: document.querySelector('[data-action=\"add-note\"]'),\n  summaryTableEl: document.querySelector('.js-summary-table'),\n  archiveLink: document.querySelector('.js-archive'),\n  archiveTableEl: document.querySelector('.js-archive-table'),\n};\n","// вибрати дати з контенту\nexport function getDates(str) {\n  const regex = /^(0?[1-9]|1[0-2]).?\\/?(0?[1-9]|[12][0-9]|3[01]).?\\/?\\d{4}$/;\n  let foundedDates = [];\n  str.split(' ').forEach(s => {\n    const matches_array = s.match(regex);\n    if (matches_array) {\n      foundedDates.push(matches_array[0]);\n    }\n  });\n  return foundedDates.join(', ');\n}","// згенерувати дату\nexport function getCurrentDate() {\n  const newDate = new Date();\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n  return newDate.toLocaleDateString('en-US', options);\n}","export default [\n    {\n        id: 1,\n        name: 'Shopping list',\n        created: 'April 20, 2021',\n        category: 'Task',\n        content: 'Tomatoes, bread',\n        dates: '',\n        \n    },\n    {\n        id: 2,\n        name: 'The theory of evolution',\n        created: 'April 27, 2021',\n        category: 'Random Thought',\n        content: 'The evolution Lorem ipsum dolor sit amet, consectetur adipisicing elit.',\n        dates: '',\n        \n    },\n    {\n        id: 3,\n        name: 'New feature',\n        created: 'May 05, 2021',\n        category: 'Idea',\n        content: 'Implement new feature esse to 7.7.2021 alias quaerat porro',\n        dates: '',\n        \n    },\n    {\n        id: 4,\n        name: 'William Gaddis',\n        created: 'May 07, 2021',\n        category: 'Quote',\n        content: 'How real is any of the past, being every moment revalued to make the present possible',\n        dates: '',\n        \n    },\n    {\n        id: 5,\n        name: 'Books',\n        created: 'May 15, 2021',\n        category: 'Task',\n        content: 'The Lean Startup',\n        dates: '',\n        \n    },\n    {\n        id: 6,\n        name: 'Theatre',\n        created: 'May 20, 2021',\n        category: 'Random Thought',\n        content: 'Sweet Home on 2/6/2021',\n        dates: '',\n        \n    },\n    {\n        id: 7,\n        name: 'Oscar Wilde',\n        created: 'May 05, 2021',\n        category: 'Quote',\n        content: 'Always forgive your enemies; nothing annoys them so much.',\n        dates: '',\n        \n    },\n     {\n        id: 8,\n        name: 'Hospital',\n        created: 'May 02, 2021',\n        category: 'Task',\n        content: 'Visit my dentist',\n        dates: '',\n        \n    },\n]","import notesList from '../data/notes';\nimport { getDates } from './get-dates';\nimport refs from './refs';\n\n// рендер таблиці\nexport const makeNotesTableRowMarkup = note => {\n  let { name, created, category, content, dates } = note;\n  dates = getDates(content);\n  return `  \n        <tr class=\"js-notes-row\">\n          <td class=\"js-name\">${name}</td>\n          <td class=\"js-created\">${created}</td>\n          <td class=\"js-categories\">${category}</td>\n          <td class=\"js-content\">${content}</td>\n          <td>${dates}</td>\n          <td>\n            <button type=\"button\" class=\"edit__button\">Edit</button>\n            <button type=\"button\" class=\"archieve__button\">Archive</button>\n            <button type=\"button\" class=\"delete__button\">Delete</button>\n          </td>\n        </tr>\n  `;\n};\n\nconst notesTableRowsMarkup = notesList.map(makeNotesTableRowMarkup).join('');\n\nrefs.tableEl.insertAdjacentHTML('beforeend', notesTableRowsMarkup);","import refs from './refs';\n\nrefs.openFormBtn.addEventListener('click', onOpenForm);\n\nfunction onOpenForm() {\n  refs.lightbox.classList.add('is-open');\n  refs.addNoteForm.classList.remove('visually-hidden');\n  refs.saveBtn.style.display = 'none';\n}","import refs from './refs';\n\nrefs.closeFormBtn.addEventListener('click', onCloseForm);\n\nexport function onCloseForm() {\n  refs.lightbox.classList.remove('is-open');\n  refs.addNoteForm.classList.add('visually-hidden');\n  refs.archiveTableEl.classList.add('visually-hidden');\n  refs.addBtn.style.display = '';\n  refs.saveBtn.style.display = '';\n}","export const getBtns = str => {\n  return document.querySelectorAll(str);\n};","import refs from './refs';\n// рендер підсумкової таблиці\n\nconst tds = () => {\n  return [...document.querySelectorAll('.js-categories')];\n};\n\nconst makeSummaryTableRowMarkup = data => {\n  let { option, active, archieved } = data;\n  return `  \n        <tr>\n          <td>${option}</td>\n          <td>${active}</td>\n          <td>${archieved}</td>\n        </tr>\n  `;\n};\n\nconst optionsArray = [...document.getElementById('categories').children].map(\n  option => option.value,\n);\n\nfunction makeSummaryTableRowData() {\n  optionsArray.map(item => {\n    countNotesByCategoryAndStatus(tds, item);\n  });\n}\n\nfunction countNotesByCategoryAndStatus(callback, option) {\n  const array = callback();\n  const arrayByCategory = array.filter(td => {\n    return td.textContent === option;\n  });\n  let activeArray = [];\n  let archivedArray = [];\n\n  arrayByCategory.filter(item => {\n    if (item.parentElement.hasAttribute('data-status')) {\n      archivedArray.push(item.parentElement);\n    }\n    if (!item.parentElement.hasAttribute('data-status')) {\n      activeArray.push(item.parentElement);\n    }\n  });\n\n  const newSummaryRowData = {};\n  newSummaryRowData.option = option;\n  newSummaryRowData.active = activeArray.length;\n  newSummaryRowData.archieved = archivedArray.length;\n  summaryData.push(newSummaryRowData);\n  return summaryData;\n}\n\nlet summaryData = [];\nexport function renderSummaryTable() {\n  summaryData = [];\n  makeSummaryTableRowData();\n  const summaryTableRowsMarkup = summaryData.map(makeSummaryTableRowMarkup).join('');\n  if ([...refs.summaryTableEl.children].length > 1) {\n    refs.summaryTableEl.lastElementChild.remove();\n  }\n  refs.summaryTableEl.insertAdjacentHTML('beforeend', summaryTableRowsMarkup);\n}\nrenderSummaryTable();\n","import { getBtns } from './get-btns';\nimport { renderSummaryTable } from './render-summary';\n// видалення запису\nexport function deleteNote(callback) {\n  const list = callback('.delete__button');\n  list.forEach(btn => {\n    btn.addEventListener('click', event => {\n      const parent = btn.parentNode.parentNode;\n      parent.remove();\n      renderSummaryTable();\n    });\n  });\n}\ndeleteNote(getBtns);","import refs from './refs';\nimport { getBtns } from './get-btns';\nimport { renderSummaryTable } from './render-summary';\nimport { tbodyEl } from './add-new-note';\n\nexport let editTarget = [];\nexport let index = -1;\nexport function editNote(callback) {\n  const editBtns = callback('.edit__button');\n  editBtns.forEach(btn => {\n    const editNoteData = {};\n    btn.addEventListener('click', event => {\n      const parent = btn.parentNode.parentNode;\n      editTarget = [...btn.parentNode.parentNode.children];\n      refs.lightbox.classList.add('is-open');\n      refs.addNoteForm.classList.remove('visually-hidden');\n      refs.addBtn.style.display = 'none';\n\n      // берем індекс цільової записки\n      index = [...tbodyEl.children].indexOf(parent);\n      \n      // берем дані цільової записки\n      editTarget.map(item => {\n        if (item.className === 'js-name') {\n          editNoteData.name = item.textContent;\n        }\n        if (item.className === 'js-categories') {\n          editNoteData.category = item.textContent;\n        }\n        if (item.className === 'js-content') {\n          editNoteData.content = item.textContent;\n        }\n      });\n\n      // заповнення форми даними для редагування\n      const inputs = callback('input');\n      inputs.forEach(input => {\n        if (input.name === 'name') {\n          input.value = editNoteData.name;\n        }\n        if (input.name === 'categ') {\n          input.value = editNoteData.category;\n        }\n        if (input.name === 'content') {\n          input.value = editNoteData.content;\n        }\n      });\n\n      // console.log('new editNoteData', editNoteData);\n      // console.log(editTarget);\n\n      renderSummaryTable();\n\n      return editTarget, index;\n    });\n  });\n}\neditNote(getBtns);","import refs from './refs';\nimport { renderSummaryTable } from './render-summary';\nimport { renderArchiveTable } from './render-archive';\nimport { archiveData } from './render-archive';\n// розархівування запису\nlet unarchiveBtns = [];\nexport function getUnarchiveBtns() {\n  unarchiveBtns = [...refs.archiveTableEl.querySelectorAll('.unarchieve__button')];\n  unarchiveBtns.forEach(btn => {\n    btn.addEventListener('click', event => {\n      const parent = btn.parentNode.parentNode;\n      const identity = parent.firstElementChild.textContent;\n      const index = unarchiveBtns.indexOf(btn);\n      archiveData.splice(index, 1);\n      const arrayOfNamesTds = document.querySelectorAll('.js-name');\n      arrayOfNamesTds.forEach(td => {\n        if (td.textContent === identity) {\n          delete td.parentElement.dataset.status;\n          td.parentElement.style.display = '';\n          renderSummaryTable();\n          renderArchiveTable();\n          getUnarchiveBtns();\n        }\n      });\n    });\n  });\n}","import refs from './refs';\nimport { getUnarchiveBtns } from './unarchive-note';\n\n// рендер архіву\nrefs.archiveLink.addEventListener('click', onaAchiveLinkClick);\n\nfunction onaAchiveLinkClick(e) {\n  e.preventDefault();\n  refs.lightbox.classList.add('is-open');\n  refs.archiveTableEl.classList.remove('visually-hidden');\n  renderArchiveTable();\n  getUnarchiveBtns();\n}\nconst makeArchiveTableRowMarkup = data => {\n  let { name, category, content } = data;\n  return `  \n        <tr>\n          <td>${name}</td>\n          <td>${category}</td>\n          <td>${content}</td>\n          <td>\n            <button type=\"button\" class=\"unarchieve__button\">Unarchive</button>\n          </td>\n        </tr>\n  `;\n};\nexport let archiveData = [];\n\nexport function renderArchiveTable() {\n  if ([...refs.archiveTableEl.children].length > 1) {\n    refs.archiveTableEl.lastElementChild.remove();\n  }\n  const archiveTableRowsMarkup = archiveData.map(makeArchiveTableRowMarkup).join('');\n  refs.archiveTableEl.insertAdjacentHTML('beforeend', archiveTableRowsMarkup);\n}\n\nexport const trs = () => {\n  const arrayOfTrs = [...document.querySelectorAll('.js-notes-row')];\n  let archivedList = [];\n  arrayOfTrs.filter(item => {\n    if (item.hasAttribute('data-status')) {\n      archivedList.push(item);\n    }\n  });\n  return archivedList;\n};\n\nexport function getArchiveTableData(foo) {\n  const archivedArray = foo();\n  archiveData = [];\n  archivedArray.map(item => {\n    let elName = item.querySelector('.js-name');\n    let elCateg = item.querySelector('.js-categories');\n    let elContent = item.querySelector('.js-content');\n    const newArchiveRow = {};\n    newArchiveRow.name = elName.textContent;\n    newArchiveRow.category = elCateg.textContent;\n    newArchiveRow.content = elContent.textContent;\n    archiveData.push(newArchiveRow);\n  });\n  return archiveData;\n}","import { getBtns } from './get-btns';\nimport { renderSummaryTable } from './render-summary';\nimport { getArchiveTableData, trs } from './render-archive';\n\n// архівування запису\nexport function archiveNote(callback) {\n  const list = callback('.archieve__button');\n  list.forEach(btn => {\n    btn.addEventListener('click', event => {\n      const parent = btn.parentNode.parentNode;\n      parent.style.display = 'none';\n      parent.dataset.status = 'archieved';\n      renderSummaryTable();\n      getArchiveTableData(trs);\n    });\n  });\n}\narchiveNote(getBtns);","import refs from './refs';\nimport { getCurrentDate } from './get-current-date';\nimport { getDates } from './get-dates';\nimport { getBtns } from './get-btns';\nimport { onCloseForm } from './close-form';\nimport { renderSummaryTable } from './render-summary';\nimport { deleteNote } from './delete-note';\nimport { editNote } from './edit-note';\nimport { archiveNote } from './archive-note';\nimport { editTarget, index } from './edit-note';\nimport { makeNotesTableRowMarkup } from './render-notes-table';\n\n// додавання нового запису\nrefs.addNoteForm.addEventListener('submit', onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  const formElements = event.currentTarget.elements;\n\n  const name = formElements.name.value;\n  const category = formElements.categ.value;\n  const content = formElements.content.value;\n\n  const created = '';\n  renderNewNote(name, created, category, content);\n\n  refs.addNoteForm.reset();\n  onCloseForm();\n  renderSummaryTable();\n  deleteNote(getBtns);\n  archiveNote(getBtns);\n  editNote(getBtns);\n}\n\nexport const tbodyEl = document.querySelector('tbody');\nfunction renderNewNote(name, created, category, content) {\n  const newNote = {\n    name,\n    created,\n    category,\n    content,\n  };\n\n  if (!editTarget.length) {\n    newNote.created = getCurrentDate();\n  } else {\n    editTarget.filter(item => {\n      if (item.className === 'js-created') {\n        newNote.created = item.textContent;\n      }\n    });\n  }\n\n  newNote.dates = getDates(content);\n  // console.log(newNote);\n\n  const newNoteRow = makeNotesTableRowMarkup(newNote);\n  tbodyEl.insertAdjacentHTML('beforeend', newNoteRow);\n\n  if (editTarget.length) {\n    const array = [...tbodyEl.children];\n    array[index].remove();\n  }\n}\n","import './sass/main.scss';\nimport './js/refs';\nimport './js/get-dates';\nimport './js/get-current-date';\nimport './js/render-notes-table';\nimport './js/open-form';\nimport './js/close-form';\nimport './js/add-new-note';\nimport './js/get-btns';\nimport './js/edit-note';\nimport './js/delete-note';\nimport './js/archive-note';\nimport './js/render-summary';\nimport './js/render-archive';\nimport './js/unarchive-note';"]}